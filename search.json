[{"title":"Promise","path":"/2023/12/15/Promise/","content":"Promise1.什么是Promise12345678910111213141516Promise 是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve，race这几个方法，原型上有then、catch等方法。 1. 抽象表达: 1) Promise 是一门新的技术(ES6 规范) 2) Promise 是 JS 中进行异步编程的新解决方案 备注：旧方案是单纯使用回调函数 2. 具体表达: 1) 从语法上来说: Promise 是一个构造函数 2) 从功能上来说: promise 对象用来封装一个异步操作并可以获取其成功/ 失败的结果值 1.1.2. promise 的状态改变 1. pending 变为 resolved 2. pending 变为 rejected 说明: 只有这 2 种, 且一个 promise 对象只能改变一次 无论变为成功还是失败, 都会有一个结果数据 成功的结果数据一般称为 value, 失败的结果数据一般称为 reason 2.Promise-API1234567891. Promise 构造函数: Promise (excutor) &#123;&#125;2. Promise.prototype.then 方法: (onResolved, onRejected) =&gt; &#123;&#125; 3. Promise.prototype.catch 方法: (onRejected) =&gt; &#123;&#125; 4. Promise.prototype.finally 方法: () =&gt; &#123;&#125; 5. Promise.resolve 方法: (value) =&gt; &#123;&#125; 6. Promise.reject 方法: (reason) =&gt; &#123;&#125;7. Promise.all 方法: (promises) =&gt; &#123;&#125; 8. Promise.race 方法: (promises) =&gt; &#123;&#125;9. Promise.allSettled 方法: (promises) =&gt; &#123;&#125; 3.关键问题12345671. 如何改变 promise 的状态? 2. 一个 promise 指定多个成功/失败回调函数, 都会调用吗? 3. 改变 promise 状态和指定回调函数谁先谁后? 4. promise.then()返回的新 promise 的结果状态由什么决定? 5. promise 如何串连多个操作任务? 6. promise 异常传透? 7. 中断 promise 链? 4. async 与 await1231. async 函数 2. await 表达式2. 注意点 5. 其他``` bash 1. promise的应用场景 2. promise 、async/await 在事件循环机制中的不同之处","tags":["ceshi"],"categories":["前端"]},{"title":"Hello World","path":"/2023/12/15/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"about","path":"/about/index.html","content":"开发中…"},{"title":"这是分页标题","path":"/wiki/cat/index.html","content":"Quick Startfirst12345我的第一只猫不属于我，她叫皮蛋。2021年在朴园酒店打工时遇到她，是老板家的猫。嗯...品种是蓝猫。在那里上夜班总有她陪着我，我也想陪着她，也是她让我有了以后一定养一只猫的想法。大概10月左右，皮蛋因为躺在一辆车底下睡觉，发生了意外，她的一生还有一些其他的不幸。永远感谢她的短暂陪伴 123422年有了程序员的工作，也有了干不完的活，在7月份我买了我的第一只小布偶，此刻在我旁边已经是只大布偶了，他的名字叫鱼宝（公），就和这个博客站点的名字一样，是我用了多年的网名在那大概一周后，我买了第二只小猫（母），是一只长毛银点，她的名字叫一心。不得不说我去浦东机场接她的那天，是在周天，既已如此深刻，是因为前一天的周六加班了，通！宵！加！班！至此我拥有了两只小猫，让独居生活有了很多乐趣，之后也买了自行车，爱上了骑行，那时感觉生活越来越有希望了，和此刻的心境截然相反。 123423年5.12，鱼宝和一心当了爸爸妈妈，生了四只小猫23年9.19，鱼宝和一心再次当了爸爸妈妈，生了五只小猫 1234此刻是2023.12.15，23：45家里已经有了十一只猫，燃眉之急是找到工作，活下去，其次已经给两只小猫找到领养，其他的还要接着找，让小猫们也能好好活下去。"},{"title":"ceshiceshi","path":"/wiki/cola/index.html","content":"我爱喝可口可乐"},{"title":"Promise","path":"/notes/front/Promise.html","content":"Promise1.什么是Promise12345678910111213141516Promise 是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve，race这几个方法，原型上有then、catch等方法。 1. 抽象表达: 1) Promise 是一门新的技术(ES6 规范) 2) Promise 是 JS 中进行异步编程的新解决方案 备注：旧方案是单纯使用回调函数 2. 具体表达: 1) 从语法上来说: Promise 是一个构造函数 2) 从功能上来说: promise 对象用来封装一个异步操作并可以获取其成功/ 失败的结果值 1.1.2. promise 的状态改变 1. pending 变为 resolved 2. pending 变为 rejected 说明: 只有这 2 种, 且一个 promise 对象只能改变一次 无论变为成功还是失败, 都会有一个结果数据 成功的结果数据一般称为 value, 失败的结果数据一般称为 reason 2.Promise-API1234567891. Promise 构造函数: Promise (excutor) &#123;&#125;2. Promise.prototype.then 方法: (onResolved, onRejected) =&gt; &#123;&#125; 3. Promise.prototype.catch 方法: (onRejected) =&gt; &#123;&#125; 4. Promise.prototype.finally 方法: () =&gt; &#123;&#125; 5. Promise.resolve 方法: (value) =&gt; &#123;&#125; 6. Promise.reject 方法: (reason) =&gt; &#123;&#125;7. Promise.all 方法: (promises) =&gt; &#123;&#125; 8. Promise.race 方法: (promises) =&gt; &#123;&#125;9. Promise.allSettled 方法: (promises) =&gt; &#123;&#125; 3.关键问题12345671. 如何改变 promise 的状态? 2. 一个 promise 指定多个成功/失败回调函数, 都会调用吗? 3. 改变 promise 状态和指定回调函数谁先谁后? 4. promise.then()返回的新 promise 的结果状态由什么决定? 5. promise 如何串连多个操作任务? 6. promise 异常传透? 7. 中断 promise 链? 4. async 与 await1231. async 函数 2. await 表达式2. 注意点 5. 其他``` bash 1. promise的应用场景 2. promise 、async/await 在事件循环机制中的不同之处"},{"title":"notes","path":"/notes/index.html","content":"fghfhgfgh"}]